library(ggplot2)
burnin <- 1000
load("~/Documents/ERR_local/datause_051824.rda")
#zip
load("~/Documents/ERR_local/Rcode/result_summary_code_051824/result_011224_latent_total.rda")
# burn-in: 1000
zip.par.save <- par.save[(burnin+1):nrow(par.save),]
zip.par <- apply(par.save[(burnin+1):nrow(par.save), ], 2, mean)
#poi
load("~/Documents/ERR_local/Rcode/result_summary_code_051824/result_total_1206_poi.rda")
poi.par.save <- par.save[(burnin+1):nrow(par.save),]
poi.par <- apply(par.save[(burnin+1):nrow(par.save), ], 2, mean)
rm(par.save)
y <- data$solid
upto <- 100
indi <- order(y, decreasing = T)[1:upto]
data.sub <- data[indi, ]
# lambda ftn
lb.ftn <- function(data.input, x.input, x2.input, par.input){
py <- data.input$pyr/10000
y <- data.input$solid
n <- length(y)
# sex specific
male <- data.input$male
female <- data.input$female
dose <- data.input$dgy
mdose <- male*dose
fdose <- female*dose
par1 <- par.input[1:12]
e.eta <- exp(apply(x.input * par1, 2, sum))
rho.d <- par.input[17] * mdose + par.input[18] * fdose
par2 <- par.input[13:16]
eps.z <- exp(apply(x2.input * par2, 2, sum))
lambda <- py * e.eta * (1 + rho.d * eps.z)
return(lambda)
}
byr15 <- (floor(data.sub$year-data.sub$age)-1915)/10
m.byr15 <- byr15 * data.sub$male
f.byr15 <- byr15 * data.sub$female
x <- rbind(data.sub$male, data.sub$mlage70, data.sub$mlage70sq, data.sub$mlage70qsp,
data.sub$female, data.sub$flage70, data.sub$flage70sq, data.sub$flage70qsp
,m.byr15, f.byr15, data.sub$hnic, data.sub$nnic
)
kerma <- data.sub$un4gy # 1 if K>4 0 otherwise
kerma[kerma==0] <- 2
kerma[kerma==1] <- 0
kerma[kerma==2] <- 1
x2 <- rbind(data.sub$lage70 * data.sub$male, data.sub$lage70 * data.sub$female , data.sub$ex30, kerma)
bayes.lambda <- lb.ftn(data.sub, x, x2, poi.par)
## add ZIP
zip.lambda <- lb.ftn(data.sub, x, x2, zip.par[1:18])
## CI
zip.lambda.save <- matrix(0, nrow=nrow(zip.par.save), ncol= upto)
class(x)
zip.par %>% length
library(dplyr)
zip.par %>% length
kappa <- zip.par[19:24]
z <- rbind(data.sub$male, data.sub$female, data.sub$dgy, data.sub$ex30, data.sub$hnic, data.sub$nnic)
dim(z)
dim(kappa)
t(z) %*% kappa
t(z) %*% kappa %>% dim
xx <- matrix(1:6, 2, 3)
yy <- c(2,2,2)
t(xx)%*%yy
dim(xx)
dim(y)
t(xx)
xx <- matrix(1:6, 2, 3)
yy <- c(2,2)
t(xx)%*%yy
t(xx)
pi.ftn <- function(kappa_input, data_input){
t(data_input) %*% kappa_input %>%
{ 1/(1 + exp(-.)) } %>%
return()
}
## add ZIP
kappa <- zip.par[19:24]
zip.pi <- pi.ftn(kappa, z)
zip.pi
class(zip.pi)
pi.ftn <- function(kappa_input, data_input){
t(data_input) %*% kappa_input %>%
{ 1/(1 + exp(-.)) } %>%
as.vector() %>%
return()
}
zip.pi <- pi.ftn(kappa, z)
zip.pi
zip.lambda <- lb.ftn(data.sub, x, x2, zip.par[1:18])
zip.expected.mean <- (1-zip.pi) * zip.lambda
zip.expected.mean
bayes.lambda
library(ggplot2)
burnin <- 1000
load("~/Documents/ERR_local/datause_051824.rda")
#zip
load("~/Documents/ERR_local/Rcode/result_summary_code_051824/result_011224_latent_total.rda")
# burn-in: 1000
zip.par.save <- par.save[(burnin+1):nrow(par.save),]
zip.par <- apply(par.save[(burnin+1):nrow(par.save), ], 2, mean)
#poi
load("~/Documents/ERR_local/Rcode/result_summary_code_051824/result_total_1206_poi.rda")
poi.par.save <- par.save[(burnin+1):nrow(par.save),]
poi.par <- apply(par.save[(burnin+1):nrow(par.save), ], 2, mean)
rm(par.save)
data.sub <- data
# lambda ftn
lb.ftn <- function(data.input, x.input, x2.input, par.input){
py <- data.input$pyr/10000
y <- data.input$solid
n <- length(y)
# sex specific
male <- data.input$male
female <- data.input$female
dose <- data.input$dgy
mdose <- male*dose
fdose <- female*dose
par1 <- par.input[1:12]
e.eta <- exp(apply(x.input * par1, 2, sum))
rho.d <- par.input[17] * mdose + par.input[18] * fdose
par2 <- par.input[13:16]
eps.z <- exp(apply(x2.input * par2, 2, sum))
lambda <- py * e.eta * (1 + rho.d * eps.z)
return(lambda)
}
pi.ftn <- function(kappa_input, data_input){
t(data_input) %*% kappa_input %>%
{ 1/(1 + exp(-.)) } %>%
as.vector() %>%
return()
}
byr15 <- (floor(data.sub$year-data.sub$age)-1915)/10
m.byr15 <- byr15 * data.sub$male
f.byr15 <- byr15 * data.sub$female
x <- rbind(data.sub$male, data.sub$mlage70, data.sub$mlage70sq, data.sub$mlage70qsp,
data.sub$female, data.sub$flage70, data.sub$flage70sq, data.sub$flage70qsp
,m.byr15, f.byr15, data.sub$hnic, data.sub$nnic
)
kerma <- data.sub$un4gy # 1 if K>4 0 otherwise
kerma[kerma==0] <- 2
kerma[kerma==1] <- 0
kerma[kerma==2] <- 1
z <- rbind(data.sub$male, data.sub$female, data.sub$dgy, data.sub$ex30, data.sub$hnic, data.sub$nnic)
x2 <- rbind(data.sub$lage70 * data.sub$male, data.sub$lage70 * data.sub$female , data.sub$ex30, kerma)
bayes.lambda <- lb.ftn(data.sub, x, x2, poi.par)
dpois(0, bayes.lambda)
sum(dpois(0, bayes.lambda))/nrow
sum(dpois(0, bayes.lambda))/nrow(data)
sum(data$y==0)
sum(data$solid==0)
sum(data$solid==0)/nrow(data)
mean(data$solid)
var(data$solid)
sum(1-ppois(9,bayes.lambda))/nrow(data)
sum(data$solid>=10)/nrow(data)
(sum(1-ppois(9,bayes.lambda))/nrow(data))*100
(sum(data$solid>=10)/nrow(data))*100
sum(data$dgy==0)
min(data$dgy)
min(data$dgy[data$dgy!=0])
data$pyr %>% head
original_set <- read.csv("~/Documents/ERR_local/previous_study/lssinc17/sol_col_2017ext_v1.csv")
original_set$pyr %>% head
View(original_set)
risk <- (data$solid)/(data$pyr)
risk
data.frame(risk=risk, d=data$dgy)
data.frame(risk=risk, d=data$dgy) %>%
arrange(desc(d)) %>%
{plot(.[,"d"],.[,"risk"])}
data.frame(risk=risk, d=data$dgy) %>%
arrange(desc(d)) %>%
{plot(.[,"d"],.[,"risk"], type="l")}
data.frame(risk=risk, d=data$dgy) %>%
arrange(desc(d)) %>%
{plot(.[,"d"],.[,"risk"], type="h")}
risk
range(risk)
min(data$py50)
min(data$pyr)
40/min(data$pyr)
which.max(risk)
data[422,]
risk <- (data$solid)/(data$pyr/10000)
data.frame(risk=risk, d=data$dgy) %>%
arrange(desc(d)) %>%
{plot(.[,"d"],.[,"risk"], type="h")}
risk <- (data$solid)/(data$pyr)
data.frame(risk=risk, d=data$dgy) %>%
arrange(desc(d)) %>%
{plot(.[,"d"],.[,"risk"], type="h")}
hist(data$dgy)
data$dgy %>% log %>% hist
data$dgy %>% quantile
zip.expected.mean
merge <- data.frame(lambda=c(data.sub$solid, bayes.lambda, zip.expected.mean), index=c(1:upto,1:upto,1:upto) , label=c(rep("true", upto), rep("poi", upto), rep("zip", upto)))
bayes.lambda
zip.expected.mean
library(ggplot2)
burnin <- 1000
load("~/Documents/ERR_local/datause_051824.rda")
#zip
load("~/Documents/ERR_local/Rcode/result_summary_code_051824/result_011224_latent_total.rda")
# burn-in: 1000
zip.par.save <- par.save[(burnin+1):nrow(par.save),]
zip.par <- apply(par.save[(burnin+1):nrow(par.save), ], 2, mean)
#poi
load("~/Documents/ERR_local/Rcode/result_summary_code_051824/result_total_1206_poi.rda")
poi.par.save <- par.save[(burnin+1):nrow(par.save),]
poi.par <- apply(par.save[(burnin+1):nrow(par.save), ], 2, mean)
rm(par.save)
y <- data$solid
upto <- 100
indi <- order(y, decreasing = T)[1:upto]
data.sub <- data[indi, ]
# lambda ftn
lb.ftn <- function(data.input, x.input, x2.input, par.input){
py <- data.input$pyr/10000
y <- data.input$solid
n <- length(y)
# sex specific
male <- data.input$male
female <- data.input$female
dose <- data.input$dgy
mdose <- male*dose
fdose <- female*dose
par1 <- par.input[1:12]
e.eta <- exp(apply(x.input * par1, 2, sum))
rho.d <- par.input[17] * mdose + par.input[18] * fdose
par2 <- par.input[13:16]
eps.z <- exp(apply(x2.input * par2, 2, sum))
lambda <- py * e.eta * (1 + rho.d * eps.z)
return(lambda)
}
pi.ftn <- function(kappa_input, data_input){
t(data_input) %*% kappa_input %>%
{ 1/(1 + exp(-.)) } %>%
as.vector() %>%
return()
}
byr15 <- (floor(data.sub$year-data.sub$age)-1915)/10
m.byr15 <- byr15 * data.sub$male
f.byr15 <- byr15 * data.sub$female
x <- rbind(data.sub$male, data.sub$mlage70, data.sub$mlage70sq, data.sub$mlage70qsp,
data.sub$female, data.sub$flage70, data.sub$flage70sq, data.sub$flage70qsp
,m.byr15, f.byr15, data.sub$hnic, data.sub$nnic
)
kerma <- data.sub$un4gy # 1 if K>4 0 otherwise
kerma[kerma==0] <- 2
kerma[kerma==1] <- 0
kerma[kerma==2] <- 1
z <- rbind(data.sub$male, data.sub$female, data.sub$dgy, data.sub$ex30, data.sub$hnic, data.sub$nnic)
x2 <- rbind(data.sub$lage70 * data.sub$male, data.sub$lage70 * data.sub$female , data.sub$ex30, kerma)
bayes.lambda <- lb.ftn(data.sub, x, x2, poi.par)
bayes.lambda
## add ZIP
kappa <- zip.par[19:24]
zip.lambda <- lb.ftn(data.sub, x, x2, zip.par[1:18])
zip.pi <- pi.ftn(kappa, z)
zip.expected.mean <- (1-zip.pi) * zip.lambda
merge <- data.frame(lambda=c(data.sub$solid, bayes.lambda, zip.expected.mean), index=c(1:upto,1:upto,1:upto) , label=c(rep("true", upto), rep("poi", upto), rep("zip", upto)))
merge
merge$label = factor(merge$label, levels=c("true","poi","zip"))
p <- ggplot(merge, aes(index, lambda, shape = factor(label)))+
geom_point(aes(colour = factor(label)), size = 3) +
scale_shape_manual(values=c(17, 16, 15))+
scale_color_manual(values=c('#999999','#E69F00', '#56B4E9'))+
geom_errorbar(aes(ymin = lower, ymax = upper))
p
## without error bar
p <- ggplot(merge, aes(index, lambda)) +
# geom_line for "true" label
geom_line(data = subset(merge, label == "true"),  size = 1) +
# geom_point for "poi" and "zip" labels
geom_point(data = subset(merge, label %in% c("poi", "zip")), aes( shape = factor(label)), size = 3) +
# Shape and color scales
scale_shape_manual(values = c('poi' = 1, 'zip' = 17))  +
theme_minimal() +
labs(x = "", y = "Solid cancer (count)") +  # Customize x and y labels
theme(legend.position = "none")
View(merge)
ggplot(merge, aes(index, lambda)) +
# geom_line for "true" label
geom_line(data = subset(merge, label == "true"),  size = 1) +
# geom_point for "poi" and "zip" labels
geom_point(data = subset(merge, label %in% c("poi", "zip")), aes( shape = factor(label)), size = 3) +
# Shape and color scales
scale_shape_manual(values = c('poi' = 1, 'zip' = 17))  +
theme_minimal() +
labs(x = "", y = "Solid cancer (count)") +  # Customize x and y labels
theme(legend.position = "none")
(sum(1-ppois(9,bayes.lambda))/nrow(data))*100
(sum(data$solid>=10)/nrow(data))*100
sum(data$solid==0)/nrow(data)
zip.pi
mean(data$solid)
var(data$solid)
(sum(1-ppois(9,bayes.lambda))/nrow(data))*100
(sum(data$solid>=10)/nrow(data))*100
(sum(1-ppois(9,bayes.lambda))/nrow(data))*100
(sum(data$solid>=10)/nrow(data))*100
